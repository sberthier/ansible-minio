---

- name: Compose the Minio client download base url
  set_fact:
    _minio_client_download_base_url: "https://dl.minio.io/client/mc/release/linux-{{ go_arch_map[ansible_architecture] | default(ansible_architecture) }}"

- name: Compose the Minio client download url with lastest release
  set_fact:
    _minio_client_download_url: "{{ _minio_client_download_base_url }}/mc"
  when: minio_client_release == ""

- name: Compose the Minio server download url with specified release
  set_fact:
    _minio_client_download_url: "{{ _minio_client_download_base_url }}/archive/mc.{{ minio_client_release }}"
  when: minio_client_release != ""

- name: "Get the Minio client checksum for {{ go_arch_map[ansible_architecture] | default(ansible_architecture) }} architecture"
  set_fact:
    _minio_client_checksum: "{{ lookup('url', _minio_client_download_url + '.sha256sum').split(' ')[0] }}"

- name: Download the Minio client
  get_url:
    url: "{{ _minio_client_download_url }}"
    dest: "{{ minio_client_bin }}"
    owner: "root"
    group: "root"
    mode: 0755
    checksum: "sha256:{{ _minio_client_checksum }}"
  register: _download_client
  until: _download_client is succeeded
  retries: 5
  delay: 2

- name: Compose the Minio server full address (config is :port)
  set_fact:
    _minio_server_full_addr: "localhost{{ minio_server_addr }}"
  when: minio_server_addr is regex("^:[0-9]+")

- name: Configure local host for the Minio client
  command: "mc config host add local http://{{ _minio_server_full_addr }} {{ minio_access_key }} {{ minio_secret_key }}"
